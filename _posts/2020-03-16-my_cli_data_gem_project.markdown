---
layout: post
title:      "My CLI Data Gem Project"
date:       2020-03-16 12:57:51 +0000
permalink:  my_cli_data_gem_project
---


Working on this project has been the most fun I've had in Flatiron's Software Engineering Course so far! After watching several walkthrough videos, I started building my idea for this gem. Though it has very little real-life application, I thought it would be fun to work on a topic I truly love, so I chose a Star Wars API. My original idea was to be able to search through the SWAPI.co website for specific information on different characters, but the way the URL is set up, sadly, that was not possible or at the very least presented a lot of issues. Most URL's will search by name, ex. "people/search?=NAME" but the API i chose used numbers, ex. "people/24", which made things a bit tougher. So i decided to limit the options of viewable data to planets, starships and people, with planets belonging to people and starships in a section of their own. So far in the course I've had the opportunity to learn much about Ruby procedures and object orientation, but building something on my own, with my own goals and plans, really made it all come to light. Of course starships, people and planets would need their own class! And of course all of these classes would have to interact with the API, preferably without code the same code being repeated in every separate class, so a separate class for my API! Since the API delivered me a nested hash, I would need a way to assign them efficiently, so mass assignment and metaprogramming was the way to go! To list out all options the user could choose from without hard coding called for me to iterate through my arrays of data and control my output by calling on readers from my class using string interpolation to puts out my options and then information. Controlling reactions to user input brought about some (I believe, at least!) clever use of "case" statements and "if/elsif/else" statements. The idea of feeding the user information based on their interaction with my code was something i accomplished by building methods and using them inside other methods and hours spent checking that the input did actually return what I wanted it to. It's been an amazing learning experience, and i've already begun building another CLI gem scraping data from a different Star Wars fan website, for fun!
